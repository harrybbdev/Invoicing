# Script: Generate-AllFeatureMigrations.ps1
# Purpose: Generate EF Core migrations for each DbContext found in the solution

$projectDir = Resolve-Path "."
$contextSuffix = "DbContext.cs"
$migrationName = "AutoGeneratedMigration"
$startupProject = "Your.WebProject"  # 🔁 Replace with the actual startup project folder name

# Recursively find all files ending with DbContext.cs
$contextFiles = Get-ChildItem -Path $projectDir -Recurse -Filter "*$contextSuffix"

foreach ($contextFile in $contextFiles) {
    $contextPath = $contextFile.FullName
    $featureDir = Split-Path $contextPath -Parent
    $contextName = [System.IO.Path]::GetFileNameWithoutExtension($contextPath)

    Write-Host ""
    Write-Host "🔍 Checking context: $contextName in $featureDir"

    $migrationDir = Join-Path $featureDir "Migrations"

    $migrationCommand = @(
        "dotnet ef migrations add $migrationName",
        "--context $contextName",
        "--output-dir `"$migrationDir`"",
        "--project `"$featureDir`"",
        "--startup-project `"$projectDir\$startupProject`"",
        "--verbose"
    ) -join " "

    $output = & cmd /c "$migrationCommand" 2>&1

    if ($LASTEXITCODE -eq 0) {
        if ($output -match "No changes were detected in the model") {
            Write-Host "✅ No changes for $contextName — skipping migration."
        } else {
            Write-Host "✅ Migration created for $contextName"
        }
    } else {
        Write-Host "❌ Failed to create migration for $contextName"
        Write-Host $output
    }
}