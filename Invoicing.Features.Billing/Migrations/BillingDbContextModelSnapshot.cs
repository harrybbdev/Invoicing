// <auto-generated />
using System;
using System.Collections.Generic;
using Invoicing.Features.Billing.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Invoicing.Features.Billing.Migrations
{
    [DbContext(typeof(BillingDbContext))]
    partial class BillingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Invoicing.Features.Billing.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomerUniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDeadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UniqueId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Invoicing.Features.Billing.Domain.Entities.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "Invoicing.Features.Billing.Domain.Entities.LineItem.Description#UnitDescription", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Price", "Invoicing.Features.Billing.Domain.Entities.LineItem.Price#UnitPrice", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Value")
                                .HasColumnType("float");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Quantity", "Invoicing.Features.Billing.Domain.Entities.LineItem.Quantity#UnitQuantity", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<int>("Value")
                                .HasColumnType("int");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Tax", "Invoicing.Features.Billing.Domain.Entities.LineItem.Tax#Tax", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("TaxPercentage")
                                .HasColumnType("float");
                        });

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("Invoicing.Features.Billing.Domain.Entities.LineItem", b =>
                {
                    b.HasOne("Invoicing.Features.Billing.Domain.Entities.Invoice", null)
                        .WithMany("LineItems")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("Invoicing.Features.Billing.Domain.Entities.Invoice", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
